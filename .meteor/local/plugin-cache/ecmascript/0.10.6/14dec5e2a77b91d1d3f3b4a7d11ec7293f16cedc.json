{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/ui/MainManage/AddEventModal.jsx","filename":"imports/ui/MainManage/AddEventModal.jsx","sourceMaps":true,"envName":"development","cwd":"C:\\Users\\Stefany Vianelli\\Documents\\Camilo\\Universidad\\2018-10\\Web\\Proyectos\\Proyecto 3\\betSim","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/ui/MainManage/AddEventModal.jsx","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/ui/MainManage/AddEventModal.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/MainManage/AddEventModal.jsx"}},"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet ImageGallery;\nmodule.watch(require(\"./ImageGallery.jsx\"), {\n  default(v) {\n    ImageGallery = v;\n  }\n\n}, 2);\n\nclass AddEventModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      place: \"\",\n      date: \"\",\n      image: \"Basketball_1.png\",\n      team1: \"\",\n      team2: \"\",\n      prob1: 0.0,\n      prob2: 0.0,\n      tie: 0.0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.AddEvent = this.AddEvent.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  AddEvent(e) {\n    //alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n    let actCarouselImage = \"Basic_Event.png\";\n    let currentIndex = $('div.active').index();\n    let currentImg = document.getElementById(\"Slide\" + currentIndex);\n    actCarouselImage = currentImg.name;\n    /*let txtTest = \"\";\r\n        txtTest += (this.state.name + \"\\n\");\r\n     txtTest += (this.state.place + \"\\n\");\r\n     txtTest += (this.state.date + \"\\n\");\r\n     txtTest += (actCarouselImage + \"\\n\");\r\n     txtTest += (this.state.team1 + \"\\n\");\r\n     txtTest += (this.state.team2 + \"\\n\");\r\n     txtTest += (this.state.prob1 + \"\\n\");\r\n     txtTest += (this.state.prob2 + \"\\n\");\r\n     txtTest += (this.state.tie + \"\\n\");\r\n        alert(\"Adding the event on the modal: \\n\" + txtTest);*/\n\n    if (parseFloat(this.state.prob1) + parseFloat(this.state.prob2) + parseFloat(this.state.tie) > 100) {\n      $('#probabilitiesHigerThan100').show(); //alert(\"The sum of all probabilities cannot be greater than 100.\");\n    } else {\n      alert(\"Ok!\");\n      $('#passwordsNoMatchRegister').fadeOut();\n      this.props.AddCategoryEvent(this.state.name, this.state.place, this.state.date, actCarouselImage, this.state.team1, this.state.team2, this.state.prob1, this.state.prob2, this.state.tie);\n      this.setState({\n        name: '',\n        place: \"\",\n        date: \"\",\n        image: \"Basketball_1.png\",\n        team1: \"\",\n        team2: \"\",\n        prob1: 0.0,\n        prob2: 0.0,\n        tie: 0.0\n      });\n    }\n  }\n\n  render() {\n    let txtTest = \"\";\n    txtTest += this.state.name + \"\\n\";\n    txtTest += this.state.place + \"\\n\";\n    txtTest += this.state.date + \"\\n\";\n    txtTest += this.state.team1 + \"\\n\";\n    txtTest += this.state.team2 + \"\\n\";\n    txtTest += this.state.prob1 + \"\\n\";\n    txtTest += this.state.prob2 + \"\\n\";\n    txtTest += this.state.tie + \"\\n\";\n    console.log(txtTest);\n    return React.createElement(\"div\", {\n      id: \"AddEventModal\",\n      className: \"modal fade\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\"\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\"\n    }, React.createElement(\"div\", {\n      className: \"modal-content\"\n    }, React.createElement(\"div\", {\n      className: \"modal-header\"\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalLabel\"\n    }, \"Add \", this.props.categoryInfo.name, \" Event\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, \"\\xD7\"))), React.createElement(\"div\", {\n      className: \"modal-body\"\n    }, React.createElement(\"div\", {\n      id: \"probabilitiesHigerThan100\",\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      style: {\n        display: \"none\"\n      }\n    }, \"The sum of all probabilities cannot be greater than 100!\"), React.createElement(\"div\", {\n      className: \"form-group\"\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-2\"\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\"\n    }, React.createElement(\"div\", {\n      className: \"input-group-text\"\n    }, \"Name: \")), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"name\",\n      placeholder: \"Event name...\",\n      value: this.state.name,\n      onChange: this.handleChange\n    }))), React.createElement(\"div\", {\n      className: \"form-group\"\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-2\"\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\"\n    }, React.createElement(\"div\", {\n      className: \"input-group-text\"\n    }, \"Place: \")), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"place\",\n      placeholder: \"Event place...\",\n      value: this.state.place,\n      onChange: this.handleChange\n    }))), React.createElement(\"div\", {\n      className: \"form-group\"\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-2\"\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\"\n    }, React.createElement(\"div\", {\n      className: \"input-group-text\"\n    }, \"Date: \")), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"date\",\n      placeholder: \"dd/mm/aaaa\",\n      value: this.state.date,\n      onChange: this.handleChange\n    }))), React.createElement(\"div\", {\n      className: \"form-row\"\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-6\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"inputEmail4\"\n    }, \"Team 1\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"team1\",\n      placeholder: \"Team 1 Name...\",\n      value: this.state.team1,\n      onChange: this.handleChange\n    })), React.createElement(\"div\", {\n      className: \"form-group col-md-6\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"inputPassword4\"\n    }, \"Team 2\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"team2\",\n      placeholder: \"Team 2 Name...\",\n      value: this.state.team2,\n      onChange: this.handleChange\n    }))), React.createElement(\"div\", {\n      className: \"form-row\"\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-12\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"inputEmail4\"\n    }, \"Probabilities...\"), React.createElement(\"div\", {\n      className: \"form-row\"\n    }, React.createElement(\"div\", {\n      className: \"input-group col-md-4\"\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      step: \"0.01\",\n      className: \"form-control\",\n      id: \"prob1\",\n      placeholder: \"Team 1...\",\n      value: this.state.prob1,\n      onChange: this.handleChange\n    })), React.createElement(\"div\", {\n      className: \"input-group col-md-4\"\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      step: \"0.01\",\n      className: \"form-control\",\n      id: \"tie\",\n      placeholder: \"Tie...\",\n      value: this.state.tie,\n      onChange: this.handleChange\n    })), React.createElement(\"div\", {\n      className: \"input-group col-md-4\"\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      step: \"0.01\",\n      className: \"form-control\",\n      id: \"prob2\",\n      placeholder: \"Team 2...\",\n      value: this.state.prob2,\n      onChange: this.handleChange\n    }))))), React.createElement(ImageGallery, null), React.createElement(\"div\", {\n      className: \"modal-footer\"\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"data-dismiss\": \"modal\"\n    }, \"Cancel\"), React.createElement(\"button\", {\n      onClick: () => this.AddEvent(),\n      type: \"button\",\n      className: \"btn btn-danger\"\n    }, \"Save event\"))))));\n  }\n\n}\n\nAddEventModal.propTypes = {\n  categoryInfo: PropTypes.object.isRequired\n};\nmodule.exportDefault(AddEventModal);","map":{"version":3,"sources":["imports/ui/MainManage/AddEventModal.jsx"],"names":["React","Component","module","watch","require","default","v","PropTypes","ImageGallery","AddEventModal","constructor","props","state","name","place","date","image","team1","team2","prob1","prob2","tie","handleChange","bind","AddEvent","event","setState","target","id","value","e","preventDefault","actCarouselImage","currentIndex","$","index","currentImg","document","getElementById","parseFloat","show","alert","fadeOut","AddCategoryEvent","render","txtTest","console","log","categoryInfo","display","propTypes","object","isRequired","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGallery from \"./ImageGallery.jsx\";\r\n\r\nclass AddEventModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            place: \"\",\r\n            date: \"\",\r\n            image: \"Basketball_1.png\",\r\n            team1: \"\",\r\n            team2: \"\",\r\n            prob1: 0.0,\r\n            prob2: 0.0,\r\n            tie: 0.0\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.AddEvent = this.AddEvent.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ [event.target.id]: event.target.value });\r\n    }\r\n\r\n    AddEvent(e) {\r\n        //alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n\r\n        let actCarouselImage = \"Basic_Event.png\";\r\n        let currentIndex = $('div.active').index();\r\n        let currentImg = document.getElementById(\"Slide\" + currentIndex);\r\n\r\n        actCarouselImage = currentImg.name;\r\n\r\n        /*let txtTest = \"\";\r\n \r\n         txtTest += (this.state.name + \"\\n\");\r\n         txtTest += (this.state.place + \"\\n\");\r\n         txtTest += (this.state.date + \"\\n\");\r\n         txtTest += (actCarouselImage + \"\\n\");\r\n         txtTest += (this.state.team1 + \"\\n\");\r\n         txtTest += (this.state.team2 + \"\\n\");\r\n         txtTest += (this.state.prob1 + \"\\n\");\r\n         txtTest += (this.state.prob2 + \"\\n\");\r\n         txtTest += (this.state.tie + \"\\n\");\r\n \r\n         alert(\"Adding the event on the modal: \\n\" + txtTest);*/\r\n\r\n        if ( (parseFloat(this.state.prob1) + parseFloat(this.state.prob2) + parseFloat(this.state.tie)) > 100) {\r\n            $('#probabilitiesHigerThan100').show();\r\n            //alert(\"The sum of all probabilities cannot be greater than 100.\");\r\n        } else {\r\n            alert(\"Ok!\");            \r\n            $('#passwordsNoMatchRegister').fadeOut();\r\n\r\n            this.props.AddCategoryEvent(this.state.name,\r\n                this.state.place,\r\n                this.state.date,\r\n                actCarouselImage,\r\n                this.state.team1,\r\n                this.state.team2,\r\n                this.state.prob1,\r\n                this.state.prob2,\r\n                this.state.tie);\r\n\r\n\r\n            this.setState({\r\n                name: '',\r\n                place: \"\",\r\n                date: \"\",\r\n                image: \"Basketball_1.png\",\r\n                team1: \"\",\r\n                team2: \"\",\r\n                prob1: 0.0,\r\n                prob2: 0.0,\r\n                tie: 0.0\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let txtTest = \"\";\r\n\r\n        txtTest += (this.state.name + \"\\n\");\r\n        txtTest += (this.state.place + \"\\n\");\r\n        txtTest += (this.state.date + \"\\n\");\r\n        txtTest += (this.state.team1 + \"\\n\");\r\n        txtTest += (this.state.team2 + \"\\n\");\r\n        txtTest += (this.state.prob1 + \"\\n\");\r\n        txtTest += (this.state.prob2 + \"\\n\");\r\n        txtTest += (this.state.tie + \"\\n\");\r\n\r\n        console.log(txtTest);\r\n\r\n        return (\r\n            <div id=\"AddEventModal\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add {this.props.categoryInfo.name} Event</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <div id=\"probabilitiesHigerThan100\" className=\"alert alert-danger\" role=\"alert\" style={ {display: \"none\"} }>\r\n                                The sum of all probabilities cannot be greater than 100!\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"input-group mb-2\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\">Name: </div>\r\n                                    </div>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Event name...\" value={this.state.name} onChange={this.handleChange} />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"input-group mb-2\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\">Place: </div>\r\n                                    </div>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"place\" placeholder=\"Event place...\" value={this.state.place} onChange={this.handleChange} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"input-group mb-2\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\">Date: </div>\r\n                                    </div>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"date\" placeholder=\"dd/mm/aaaa\" value={this.state.date} onChange={this.handleChange} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label htmlFor=\"inputEmail4\">Team 1</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"team1\" placeholder=\"Team 1 Name...\" value={this.state.team1} onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label htmlFor=\"inputPassword4\">Team 2</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"team2\" placeholder=\"Team 2 Name...\" value={this.state.team2} onChange={this.handleChange} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label htmlFor=\"inputEmail4\">Probabilities...</label>\r\n\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"input-group col-md-4\">\r\n                                            <input type=\"number\" min=\"0\" step=\"0.01\" className=\"form-control\" id=\"prob1\" placeholder=\"Team 1...\" value={this.state.prob1} onChange={this.handleChange} />\r\n                                        </div>\r\n\r\n                                        <div className=\"input-group col-md-4\">\r\n                                            <input type=\"number\" min=\"0\" step=\"0.01\" className=\"form-control\" id=\"tie\" placeholder=\"Tie...\" value={this.state.tie} onChange={this.handleChange} />\r\n                                        </div>\r\n\r\n                                        <div className=\"input-group col-md-4\">\r\n                                            <input type=\"number\" min=\"0\" step=\"0.01\" className=\"form-control\" id=\"prob2\" placeholder=\"Team 2...\" value={this.state.prob2} onChange={this.handleChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <ImageGallery />\r\n\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                                <button onClick={() => this.AddEvent()} type=\"button\" className=\"btn btn-danger\">Save event</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddEventModal.propTypes = {\r\n    categoryInfo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default AddEventModal;"]},"sourceType":"script","hash":"14dec5e2a77b91d1d3f3b4a7d11ec7293f16cedc"}
