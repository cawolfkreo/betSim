{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/ui/MainManage/EventBetCard.jsx","filename":"imports/ui/MainManage/EventBetCard.jsx","sourceMaps":true,"envName":"development","cwd":"C:\\Users\\Stefany Vianelli\\Documents\\Camilo\\Universidad\\2018-10\\Web\\Proyectos\\Proyecto 3\\betSim","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/ui/MainManage/EventBetCard.jsx","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/ui/MainManage/EventBetCard.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/MainManage/EventBetCard.jsx"}},"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nmodule.watch(require(\"../css/EventBetCard.css\"));\n\nclass BetCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colSize: \"col-md-4\"\n    };\n  }\n\n  getFee(percent) {\n    let res = 100 / percent;\n    return Math.round(res * 100) / 100;\n  }\n\n  componentDidMount() {\n    if (this.state.colSize) {\n      window.addEventListener('resize', () => {\n        let nColSize = \"col\";\n        let width = window.innerWidth;\n\n        if (width >= 1500) {\n          nColSize = \"col-md-3\";\n        } else if (width > 900 && width < 1500) {\n          nColSize = \"col-md-4\";\n        } else {\n          nColSize = \"col-md-6\";\n        }\n\n        this.setState({\n          colSize: nColSize\n        });\n      }, false);\n    }\n  }\n\n  loadEventBets() {\n    console.log(\"EventBetCard | Bets: \");\n    console.log(this.props.eventBetsInfo);\n    let res = \"Loading...\";\n    res = this.props.eventBetsInfo.Bets.map(e => //console.log(e),\n    React.createElement(\"div\", null, React.createElement(\"div\", {\n      className: \"btn-group myButtonGroup\"\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 noPadding\"\n    }, React.createElement(\"span\", {\n      className: \"badge badge-warning myBetTitle\"\n    }, this.getFee(e.Prob1))), React.createElement(\"div\", {\n      className: \"col-md-4 noPadding\"\n    }, React.createElement(\"span\", {\n      className: \"badge badge-warning myBetTitle\"\n    }, this.getFee(e.ProbT))), React.createElement(\"div\", {\n      className: \"col-md-4 noPadding\"\n    }, React.createElement(\"span\", {\n      className: \"badge badge-warning myBetTitle\"\n    }, this.getFee(e.Prob2)))), React.createElement(\"div\", {\n      className: \"btn-group myButtonGroup\"\n    }, React.createElement(\"span\", {\n      className: \"badge badge-warning myButtonOnGroup\"\n    }, e.Team1), React.createElement(\"span\", {\n      className: \"badge badge-warning myButtonOnGroup\"\n    }, e.Tie), React.createElement(\"span\", {\n      className: \"badge badge-warning myButtonOnGroup\"\n    }, e.Team2))));\n    return res;\n  }\n\n  render() {\n    const txtLoading = \"Loading...\";\n    let Name = txtLoading;\n    let Place = txtLoading;\n    let Date = txtLoading;\n    let Image = \"Basic_Event.png\";\n    let Team1 = txtLoading;\n    let Team2 = txtLoading;\n    let Prob1 = txtLoading;\n    let Tie = txtLoading;\n    let Prob2 = txtLoading;\n    let eInfo = this.props.eventInfo; //console.log(\"EventBetCard | Event info: \");\n    //console.log(eInfo);\n\n    if (eInfo != null && eInfo != undefined && eInfo.length > 0) {\n      eInfo = eInfo[0]; //console.log(eInfo);\n\n      Name = eInfo.Name;\n      Place = eInfo.Place;\n      Date = eInfo.Date;\n      Image = eInfo.Image;\n      Team1 = eInfo.Team1;\n      Team2 = eInfo.Team2;\n      Prob1 = eInfo.Prob1;\n      Tie = eInfo.Tie;\n      Prob2 = eInfo.Prob2;\n    }\n\n    return React.createElement(\"div\", {\n      id: Name,\n      className: this.state.colSize + \" myBetCard\"\n    }, React.createElement(\"div\", {\n      className: \"card myCard\"\n    }, React.createElement(\"img\", {\n      className: \"card-img-top\",\n      src: \"img/\" + Image,\n      alt: \"Card image cap\"\n    }), React.createElement(\"div\", {\n      className: \"card-body\"\n    }, React.createElement(\"h4\", {\n      className: \"card-title\"\n    }, Name), React.createElement(\"h5\", {\n      className: \"card-title subTitle\"\n    }, Place), React.createElement(\"h5\", {\n      className: \"card-title subTitle\"\n    }, Date), React.createElement(\"div\", {\n      className: \"btn-group myButtonGroup\"\n    }, React.createElement(\"span\", {\n      className: \"badge badge-primary myButtonGroup\"\n    }, Team1), React.createElement(\"span\", {\n      className: \"badge badge-secondary myButtonGroup\"\n    }, \"Tie\"), React.createElement(\"span\", {\n      className: \"badge badge-primary myButtonGroup\"\n    }, Team2)), React.createElement(\"div\", {\n      className: \"btn-group myButtonGroup\",\n      role: \"group\",\n      \"aria-label\": \"Basic example\"\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary myButtonOnGroup\"\n    }, \"\" + this.getFee(Prob1)), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary myButtonOnGroup\"\n    }, \"\" + this.getFee(Tie)), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary myButtonOnGroup\"\n    }, \"\" + this.getFee(Prob2))), React.createElement(\"hr\", {\n      className: \"my-4\"\n    }), React.createElement(\"h5\", {\n      className: \"card-title\"\n    }, \"Bets...\"), this.loadEventBets(), React.createElement(\"hr\", {\n      className: \"my-4\"\n    }), React.createElement(\"button\", {\n      className: \"btn btn-outline-info myCardButton\",\n      type: \"submit\"\n    }, \"More info\"))));\n  }\n\n}\n\nBetCard.propTypes = {\n  eventBetsInfo: PropTypes.object.isRequired,\n  eventInfo: PropTypes.array.isRequired\n};\nmodule.exportDefault(BetCard);","map":{"version":3,"sources":["imports/ui/MainManage/EventBetCard.jsx"],"names":["React","Component","module","watch","require","default","v","PropTypes","BetCard","constructor","props","state","colSize","getFee","percent","res","Math","round","componentDidMount","window","addEventListener","nColSize","width","innerWidth","setState","loadEventBets","console","log","eventBetsInfo","Bets","map","e","Prob1","ProbT","Prob2","Team1","Tie","Team2","render","txtLoading","Name","Place","Date","Image","eInfo","eventInfo","undefined","length","propTypes","object","isRequired","array","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"../css/EventBetCard.css\";\r\n\r\nclass BetCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            colSize: \"col-md-4\"\r\n        };\r\n    }\r\n\r\n    getFee(percent) {\r\n        let res = 100 / percent;\r\n\r\n        return Math.round(res * 100) / 100;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.colSize) {\r\n            window.addEventListener('resize', () => {\r\n                let nColSize = \"col\"\r\n\r\n                let width = window.innerWidth;\r\n\r\n                if (width >= 1500) {\r\n                    nColSize = \"col-md-3\";\r\n                } else if (width > 900 && width < 1500) {\r\n                    nColSize = \"col-md-4\";\r\n                } else {\r\n                    nColSize = \"col-md-6\";\r\n                }\r\n\r\n                this.setState({ colSize: nColSize });\r\n            }, false);\r\n        }\r\n    }\r\n\r\n    loadEventBets() {\r\n        console.log(\"EventBetCard | Bets: \");\r\n        console.log(this.props.eventBetsInfo);\r\n\r\n        let res = \"Loading...\";\r\n\r\n        res = this.props.eventBetsInfo.Bets.map(e => (\r\n            //console.log(e),\r\n            <div >\r\n                <div className=\"btn-group myButtonGroup\">\r\n                        <div className=\"col-md-4 noPadding\"><span className=\"badge badge-warning myBetTitle\">{this.getFee(e.Prob1)}</span></div>\r\n                        <div className=\"col-md-4 noPadding\"><span className=\"badge badge-warning myBetTitle\">{this.getFee(e.ProbT)}</span></div>\r\n                        <div className=\"col-md-4 noPadding\"><span className=\"badge badge-warning myBetTitle\">{this.getFee(e.Prob2)}</span></div>                        \r\n                </div>\r\n                <div className=\"btn-group myButtonGroup\">\r\n                <span className=\"badge badge-warning myButtonOnGroup\">{e.Team1}</span>\r\n                        <span className=\"badge badge-warning myButtonOnGroup\">{e.Tie}</span>\r\n                        <span className=\"badge badge-warning myButtonOnGroup\">{e.Team2}</span>\r\n                        </div>\r\n            </div>\r\n        ));\r\n\r\n        return res;\r\n    }\r\n\r\n    render() {\r\n        const txtLoading = \"Loading...\";\r\n        let Name = txtLoading;\r\n        let Place = txtLoading;\r\n        let Date = txtLoading;\r\n        let Image = \"Basic_Event.png\";\r\n        let Team1 = txtLoading;\r\n        let Team2 = txtLoading;\r\n        let Prob1 = txtLoading;\r\n        let Tie = txtLoading;\r\n        let Prob2 = txtLoading;\r\n\r\n        let eInfo = this.props.eventInfo;\r\n\r\n        //console.log(\"EventBetCard | Event info: \");\r\n        //console.log(eInfo);\r\n\r\n        if (eInfo != null && eInfo != undefined && eInfo.length > 0) {\r\n            eInfo = eInfo[0];\r\n\r\n            //console.log(eInfo);\r\n\r\n            Name = eInfo.Name;\r\n            Place = eInfo.Place;\r\n            Date = eInfo.Date;\r\n            Image = eInfo.Image;\r\n            Team1 = eInfo.Team1;\r\n            Team2 = eInfo.Team2;\r\n            Prob1 = eInfo.Prob1;\r\n            Tie = eInfo.Tie;\r\n            Prob2 = eInfo.Prob2;\r\n        }\r\n\r\n        return (\r\n            <div id={Name} className={this.state.colSize + \" myBetCard\"}>\r\n                <div className=\"card myCard\">\r\n                    <img className=\"card-img-top\" src={\"img/\" + Image} alt=\"Card image cap\" />\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">{Name}</h4>\r\n                        <h5 className=\"card-title subTitle\">{Place}</h5>\r\n                        <h5 className=\"card-title subTitle\">{Date}</h5>\r\n\r\n                        <div className=\"btn-group myButtonGroup\">\r\n                            <span className=\"badge badge-primary myButtonGroup\">{Team1}</span>\r\n                            <span className=\"badge badge-secondary myButtonGroup\">Tie</span>\r\n                            <span className=\"badge badge-primary myButtonGroup\">{Team2}</span>\r\n                        </div>\r\n\r\n                        <div className=\"btn-group myButtonGroup\" role=\"group\" aria-label=\"Basic example\">\r\n                            <button type=\"button\" className=\"btn btn-primary myButtonOnGroup\">{\"\" + this.getFee(Prob1)}</button>\r\n                            <button type=\"button\" className=\"btn btn-secondary myButtonOnGroup\">{\"\" + this.getFee(Tie)}</button>\r\n                            <button type=\"button\" className=\"btn btn-primary myButtonOnGroup\">{\"\" + this.getFee(Prob2)}</button>\r\n                        </div>\r\n\r\n                        <hr className=\"my-4\" />\r\n                        <h5 className=\"card-title\">Bets...</h5>\r\n\r\n                        {this.loadEventBets()}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <button className=\"btn btn-outline-info myCardButton\" type=\"submit\">More info</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBetCard.propTypes = {\r\n    eventBetsInfo: PropTypes.object.isRequired,\r\n    eventInfo: PropTypes.array.isRequired\r\n}\r\n\r\nexport default BetCard;"]},"sourceType":"script","hash":"254e4f2a1e0412268ea5bf31fc234f5d1360d853"}
