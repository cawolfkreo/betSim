{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/ui/MainManage/EventCard.jsx","filename":"imports/ui/MainManage/EventCard.jsx","sourceMaps":true,"envName":"development","cwd":"C:\\Users\\Stefany Vianelli\\Documents\\Camilo\\Universidad\\2018-10\\Web\\Proyectos\\Proyecto 3\\betSim","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/ui/MainManage/EventCard.jsx","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/ui/MainManage/EventCard.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/MainManage/EventCard.jsx"}},"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet AddBetModal;\nmodule.watch(require(\"./AddBetModal.jsx\"), {\n  default(v) {\n    AddBetModal = v;\n  }\n\n}, 2);\nmodule.watch(require(\"../css/EventCard.css\"));\n\nclass EventCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colSize: \"col-md-4\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.colSize) {\n      window.addEventListener('resize', () => {\n        let nColSize = \"col\";\n        let width = window.innerWidth;\n\n        if (width >= 1500) {\n          nColSize = \"col-md-3\";\n        } else if (width > 900 && width < 1500) {\n          nColSize = \"col-md-4\";\n        } else {\n          nColSize = \"col-md-6\";\n        }\n\n        this.setState({\n          colSize: nColSize\n        });\n      }, false);\n    }\n  }\n\n  getFee(percent) {\n    let res = 100 / percent;\n    return Math.round(res * 100) / 100;\n  }\n\n  render() {\n    let eInfo = this.props.eventInfo;\n    let modal = \"\";\n    modal = React.createElement(AddBetModal, {\n      eventInfo: eInfo,\n      AddBet: (b1, b2, bT, eR) => this.AddBet(b1, b2, bT, eR)\n    });\n    return React.createElement(\"div\", {\n      id: eInfo.Name,\n      className: this.state.colSize\n    }, React.createElement(\"div\", {\n      className: \"card myCard\"\n    }, React.createElement(\"img\", {\n      className: \"card-img-top\",\n      src: \"img/\" + eInfo.Image,\n      alt: \"Card image cap\"\n    }), React.createElement(\"div\", {\n      className: \"card-body\"\n    }, React.createElement(\"h4\", {\n      className: \"card-title\"\n    }, eInfo.Name), React.createElement(\"h5\", {\n      className: \"card-title subTitle\"\n    }, eInfo.Place), React.createElement(\"h5\", {\n      className: \"card-title subTitle\"\n    }, eInfo.Date), React.createElement(\"div\", {\n      className: \"btn-group myButtonGroup\"\n    }, React.createElement(\"span\", {\n      className: \"badge badge-primary myButtonGroup\"\n    }, eInfo.Team1), React.createElement(\"span\", {\n      className: \"badge badge-secondary myButtonGroup\"\n    }, \"Tie\"), React.createElement(\"span\", {\n      className: \"badge badge-primary myButtonGroup\"\n    }, eInfo.Team2)), React.createElement(\"div\", {\n      className: \"btn-group myButtonGroup\",\n      role: \"group\",\n      \"aria-label\": \"Basic example\"\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary myButtonOnGroup\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#Add\" + Name + \"BetModal\"\n    }, \"\" + this.getFee(eInfo.Prob1)), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary myButtonOnGroup\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#Add\" + Name + \"BetModal\"\n    }, \"\" + this.getFee(eInfo.Tie)), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary myButtonOnGroup\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#Add\" + Name + \"BetModal\"\n    }, \"\" + this.getFee(eInfo.Prob2))), React.createElement(\"hr\", {\n      className: \"my-4\"\n    }), React.createElement(\"button\", {\n      className: \"btn btn-outline-info myCardButton\",\n      type: \"submit\"\n    }, \"More info\"))), modal);\n  }\n\n}\n\nEventCard.propTypes = {\n  eventInfo: PropTypes.object.isRequired\n};\nmodule.exportDefault(EventCard);","map":{"version":3,"sources":["imports/ui/MainManage/EventCard.jsx"],"names":["React","Component","module","watch","require","default","v","PropTypes","AddBetModal","EventCard","constructor","props","state","colSize","componentDidMount","window","addEventListener","nColSize","width","innerWidth","setState","getFee","percent","res","Math","round","render","eInfo","eventInfo","modal","b1","b2","bT","eR","AddBet","Name","Image","Place","Date","Team1","Team2","Prob1","Tie","Prob2","propTypes","object","isRequired","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AddBetModal from \"./AddBetModal.jsx\";\r\nimport \"../css/EventCard.css\";\r\n\r\nclass EventCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            colSize: \"col-md-4\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.colSize) {\r\n            window.addEventListener('resize', () => {\r\n                let nColSize = \"col\"\r\n\r\n                let width = window.innerWidth;\r\n\r\n                if (width >= 1500) {\r\n                    nColSize = \"col-md-3\";\r\n                } else if (width > 900 && width < 1500) {\r\n                    nColSize = \"col-md-4\";\r\n                } else {\r\n                    nColSize = \"col-md-6\";\r\n                }\r\n\r\n                this.setState({ colSize: nColSize });\r\n            }, false);\r\n        }\r\n    }\r\n\r\n    getFee(percent) {\r\n        let res = 100 / percent;\r\n\r\n        return Math.round(res * 100) / 100;\r\n    }\r\n\r\n    render() {\r\n        let eInfo = this.props.eventInfo;\r\n        \r\n        let modal = \"\";\r\n\r\n        modal = <AddBetModal eventInfo={eInfo} AddBet={(b1, b2, bT, eR) => this.AddBet(b1, b2, bT, eR)}/>;\r\n\r\n        return (\r\n            <div id={eInfo.Name} className={this.state.colSize}>\r\n                <div className=\"card myCard\">\r\n                    <img className=\"card-img-top\" src={\"img/\" + eInfo.Image} alt=\"Card image cap\" />\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">{eInfo.Name}</h4>\r\n                        <h5 className=\"card-title subTitle\">{eInfo.Place}</h5>\r\n                        <h5 className=\"card-title subTitle\">{eInfo.Date}</h5>\r\n\r\n                        <div className=\"btn-group myButtonGroup\">\r\n                            <span className=\"badge badge-primary myButtonGroup\">{eInfo.Team1}</span>\r\n                            <span className=\"badge badge-secondary myButtonGroup\">Tie</span>\r\n                            <span className=\"badge badge-primary myButtonGroup\">{eInfo.Team2}</span>\r\n                        </div>\r\n\r\n                        <div className=\"btn-group myButtonGroup\" role=\"group\" aria-label=\"Basic example\">\r\n                            <button type=\"button\" className=\"btn btn-primary myButtonOnGroup\" data-toggle=\"modal\" data-target={\"#Add\" + Name + \"BetModal\"}>{\"\" + this.getFee(eInfo.Prob1)}</button>\r\n                            <button type=\"button\" className=\"btn btn-secondary myButtonOnGroup\" data-toggle=\"modal\" data-target={\"#Add\" + Name + \"BetModal\"}>{\"\" + this.getFee(eInfo.Tie)}</button>\r\n                            <button type=\"button\" className=\"btn btn-primary myButtonOnGroup\" data-toggle=\"modal\" data-target={\"#Add\" + Name + \"BetModal\"}>{\"\" + this.getFee(eInfo.Prob2)}</button>\r\n                        </div>\r\n\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <button className=\"btn btn-outline-info myCardButton\" type=\"submit\">More info</button>\r\n                    </div>\r\n                </div>\r\n                {modal}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEventCard.propTypes = {\r\n    eventInfo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default EventCard;"]},"sourceType":"script","hash":"a739ffa1097f54f35ae9bff999611b093b9de5af"}
