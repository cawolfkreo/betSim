{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/ui/MainManage/EventBetCard.jsx","filename":"imports/ui/MainManage/EventBetCard.jsx","sourceMaps":true,"envName":"development","cwd":"C:\\Users\\Stefany Vianelli\\Documents\\Camilo\\Universidad\\2018-10\\Web\\Proyectos\\Proyecto 3\\betSim","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/ui/MainManage/EventBetCard.jsx","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/ui/MainManage/EventBetCard.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/MainManage/EventBetCard.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar React, Component;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nmodule.watch(require(\"../css/EventBetCard.css\"));\n\nvar BetCard =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(BetCard, _Component);\n\n  function BetCard(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      colSize: \"col-md-4\"\n    };\n    return _this;\n  }\n\n  var _proto = BetCard.prototype;\n\n  _proto.getFee = function () {\n    function getFee(percent) {\n      var res = 100 / percent;\n      return Math.round(res * 100) / 100;\n    }\n\n    return getFee;\n  }();\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      var _this2 = this;\n\n      if (this.state.colSize) {\n        window.addEventListener('resize', function () {\n          var nColSize = \"col\";\n          var width = window.innerWidth;\n\n          if (width >= 1500) {\n            nColSize = \"col-md-3\";\n          } else if (width > 900 && width < 1500) {\n            nColSize = \"col-md-4\";\n          } else {\n            nColSize = \"col-md-6\";\n          }\n\n          _this2.setState({\n            colSize: nColSize\n          });\n        }, false);\n      }\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.loadEventBets = function () {\n    function loadEventBets() {\n      var _this3 = this;\n\n      console.log(\"EventBetCard | Bets: \");\n      console.log(this.props.eventBetsInfo);\n      var res = \"Loading...\";\n      res = this.props.eventBetsInfo.Bets.map(function (e) {\n        return (//console.log(e),\n          React.createElement(\"div\", null, React.createElement(\"div\", {\n            className: \"btn-group myButtonGroup\"\n          }, React.createElement(\"div\", {\n            className: \"col-md-4 noPadding\"\n          }, React.createElement(\"span\", {\n            className: \"badge badge-warning myBetTitle\"\n          }, _this3.getFee(e.Prob1))), React.createElement(\"div\", {\n            className: \"col-md-4 noPadding\"\n          }, React.createElement(\"span\", {\n            className: \"badge badge-warning myBetTitle\"\n          }, _this3.getFee(e.ProbT))), React.createElement(\"div\", {\n            className: \"col-md-4 noPadding\"\n          }, React.createElement(\"span\", {\n            className: \"badge badge-warning myBetTitle\"\n          }, _this3.getFee(e.Prob2))), React.createElement(\"span\", {\n            className: \"badge badge-warning myButtonOnGroup\"\n          }, e.Team1), React.createElement(\"span\", {\n            className: \"badge badge-warning myButtonOnGroup\"\n          }, e.Tie), React.createElement(\"span\", {\n            className: \"badge badge-warning myButtonOnGroup\"\n          }, e.Team2)))\n        );\n      });\n      return res;\n    }\n\n    return loadEventBets;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var txtLoading = \"Loading...\";\n      var Name = txtLoading;\n      var Place = txtLoading;\n      var Date = txtLoading;\n      var Image = \"Basic_Event.png\";\n      var Team1 = txtLoading;\n      var Team2 = txtLoading;\n      var Prob1 = txtLoading;\n      var Tie = txtLoading;\n      var Prob2 = txtLoading;\n      var eInfo = this.props.eventInfo; //console.log(\"EventBetCard | Event info: \");\n      //console.log(eInfo);\n\n      if (eInfo != null && eInfo != undefined && eInfo.length > 0) {\n        eInfo = eInfo[0]; //console.log(eInfo);\n\n        Name = eInfo.Name;\n        Place = eInfo.Place;\n        Date = eInfo.Date;\n        Image = eInfo.Image;\n        Team1 = eInfo.Team1;\n        Team2 = eInfo.Team2;\n        Prob1 = eInfo.Prob1;\n        Tie = eInfo.Tie;\n        Prob2 = eInfo.Prob2;\n      }\n\n      return React.createElement(\"div\", {\n        id: Name,\n        className: this.state.colSize + \" myBetCard\"\n      }, React.createElement(\"div\", {\n        className: \"card myCard\"\n      }, React.createElement(\"img\", {\n        className: \"card-img-top\",\n        src: \"img/\" + Image,\n        alt: \"Card image cap\"\n      }), React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"h4\", {\n        className: \"card-title\"\n      }, Name), React.createElement(\"h5\", {\n        className: \"card-title subTitle\"\n      }, Place), React.createElement(\"h5\", {\n        className: \"card-title subTitle\"\n      }, Date), React.createElement(\"div\", {\n        className: \"btn-group myButtonGroup\"\n      }, React.createElement(\"span\", {\n        className: \"badge badge-primary myButtonGroup\"\n      }, Team1), React.createElement(\"span\", {\n        className: \"badge badge-secondary myButtonGroup\"\n      }, \"Tie\"), React.createElement(\"span\", {\n        className: \"badge badge-primary myButtonGroup\"\n      }, Team2)), React.createElement(\"div\", {\n        className: \"btn-group myButtonGroup\",\n        role: \"group\",\n        \"aria-label\": \"Basic example\"\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary myButtonOnGroup\"\n      }, \"\" + this.getFee(Prob1)), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary myButtonOnGroup\"\n      }, \"\" + this.getFee(Tie)), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary myButtonOnGroup\"\n      }, \"\" + this.getFee(Prob2))), React.createElement(\"hr\", {\n        className: \"my-4\"\n      }), React.createElement(\"h5\", {\n        className: \"card-title\"\n      }, \"Bets...\"), this.loadEventBets(), React.createElement(\"hr\", {\n        className: \"my-4\"\n      }), React.createElement(\"button\", {\n        className: \"btn btn-outline-info myCardButton\",\n        type: \"submit\"\n      }, \"More info\"))));\n    }\n\n    return render;\n  }();\n\n  return BetCard;\n}(Component);\n\nBetCard.propTypes = {\n  eventBetsInfo: PropTypes.object.isRequired,\n  eventInfo: PropTypes.array.isRequired\n};\nmodule.exportDefault(BetCard);","map":{"version":3,"sources":["imports/ui/MainManage/EventBetCard.jsx"],"names":["React","Component","module","watch","require","v","PropTypes","BetCard","props","state","colSize","getFee","percent","res","Math","round","componentDidMount","window","addEventListener","nColSize","width","innerWidth","setState","loadEventBets","console","log","eventBetsInfo","Bets","map","e","Prob1","ProbT","Prob2","Team1","Tie","Team2","render","txtLoading","Name","Place","Date","Image","eInfo","eventInfo","undefined","length","propTypes","object","isRequired","array","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"../css/EventBetCard.css\";\r\n\r\nclass BetCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            colSize: \"col-md-4\"\r\n        };\r\n    }\r\n\r\n    getFee(percent) {\r\n        let res = 100 / percent;\r\n\r\n        return Math.round(res * 100) / 100;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.colSize) {\r\n            window.addEventListener('resize', () => {\r\n                let nColSize = \"col\"\r\n\r\n                let width = window.innerWidth;\r\n\r\n                if (width >= 1500) {\r\n                    nColSize = \"col-md-3\";\r\n                } else if (width > 900 && width < 1500) {\r\n                    nColSize = \"col-md-4\";\r\n                } else {\r\n                    nColSize = \"col-md-6\";\r\n                }\r\n\r\n                this.setState({ colSize: nColSize });\r\n            }, false);\r\n        }\r\n    }\r\n\r\n    loadEventBets() {\r\n        console.log(\"EventBetCard | Bets: \");\r\n        console.log(this.props.eventBetsInfo);\r\n\r\n        let res = \"Loading...\";\r\n\r\n        res = this.props.eventBetsInfo.Bets.map(e => (\r\n            //console.log(e),\r\n            <div >\r\n                <div className=\"btn-group myButtonGroup\">\r\n                        <div className=\"col-md-4 noPadding\"><span className=\"badge badge-warning myBetTitle\">{this.getFee(e.Prob1)}</span></div>\r\n                        <div className=\"col-md-4 noPadding\"><span className=\"badge badge-warning myBetTitle\">{this.getFee(e.ProbT)}</span></div>\r\n                        <div className=\"col-md-4 noPadding\"><span className=\"badge badge-warning myBetTitle\">{this.getFee(e.Prob2)}</span></div>\r\n                        \r\n                        <span className=\"badge badge-warning myButtonOnGroup\">{e.Team1}</span>\r\n                        <span className=\"badge badge-warning myButtonOnGroup\">{e.Tie}</span>\r\n                        <span className=\"badge badge-warning myButtonOnGroup\">{e.Team2}</span>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        return res;\r\n    }\r\n\r\n    render() {\r\n        const txtLoading = \"Loading...\";\r\n        let Name = txtLoading;\r\n        let Place = txtLoading;\r\n        let Date = txtLoading;\r\n        let Image = \"Basic_Event.png\";\r\n        let Team1 = txtLoading;\r\n        let Team2 = txtLoading;\r\n        let Prob1 = txtLoading;\r\n        let Tie = txtLoading;\r\n        let Prob2 = txtLoading;\r\n\r\n        let eInfo = this.props.eventInfo;\r\n\r\n        //console.log(\"EventBetCard | Event info: \");\r\n        //console.log(eInfo);\r\n\r\n        if (eInfo != null && eInfo != undefined && eInfo.length > 0) {\r\n            eInfo = eInfo[0];\r\n\r\n            //console.log(eInfo);\r\n\r\n            Name = eInfo.Name;\r\n            Place = eInfo.Place;\r\n            Date = eInfo.Date;\r\n            Image = eInfo.Image;\r\n            Team1 = eInfo.Team1;\r\n            Team2 = eInfo.Team2;\r\n            Prob1 = eInfo.Prob1;\r\n            Tie = eInfo.Tie;\r\n            Prob2 = eInfo.Prob2;\r\n        }\r\n\r\n        return (\r\n            <div id={Name} className={this.state.colSize + \" myBetCard\"}>\r\n                <div className=\"card myCard\">\r\n                    <img className=\"card-img-top\" src={\"img/\" + Image} alt=\"Card image cap\" />\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">{Name}</h4>\r\n                        <h5 className=\"card-title subTitle\">{Place}</h5>\r\n                        <h5 className=\"card-title subTitle\">{Date}</h5>\r\n\r\n                        <div className=\"btn-group myButtonGroup\">\r\n                            <span className=\"badge badge-primary myButtonGroup\">{Team1}</span>\r\n                            <span className=\"badge badge-secondary myButtonGroup\">Tie</span>\r\n                            <span className=\"badge badge-primary myButtonGroup\">{Team2}</span>\r\n                        </div>\r\n\r\n                        <div className=\"btn-group myButtonGroup\" role=\"group\" aria-label=\"Basic example\">\r\n                            <button type=\"button\" className=\"btn btn-primary myButtonOnGroup\">{\"\" + this.getFee(Prob1)}</button>\r\n                            <button type=\"button\" className=\"btn btn-secondary myButtonOnGroup\">{\"\" + this.getFee(Tie)}</button>\r\n                            <button type=\"button\" className=\"btn btn-primary myButtonOnGroup\">{\"\" + this.getFee(Prob2)}</button>\r\n                        </div>\r\n\r\n                        <hr className=\"my-4\" />\r\n                        <h5 className=\"card-title\">Bets...</h5>\r\n\r\n                        {this.loadEventBets()}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <button className=\"btn btn-outline-info myCardButton\" type=\"submit\">More info</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBetCard.propTypes = {\r\n    eventBetsInfo: PropTypes.object.isRequired,\r\n    eventInfo: PropTypes.array.isRequired\r\n}\r\n\r\nexport default BetCard;"]},"sourceType":"script","hash":"c12abb01ff7d73754b2bf7f60f235108b3b8bf80"}
