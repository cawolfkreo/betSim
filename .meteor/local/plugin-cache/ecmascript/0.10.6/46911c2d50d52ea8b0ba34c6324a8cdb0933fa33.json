{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/ui/MainManage/MyBets.jsx","filename":"imports/ui/MainManage/MyBets.jsx","sourceMaps":true,"envName":"development","cwd":"C:\\Users\\Stefany Vianelli\\Documents\\Camilo\\Universidad\\2018-10\\Web\\Proyectos\\Proyecto 3\\betSim","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/ui/MainManage/MyBets.jsx","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/ui/MainManage/MyBets.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/MainManage/MyBets.jsx"}},"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet withTracker;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 2);\nlet EventBetCard;\nmodule.watch(require(\"./EventBetCard.jsx\"), {\n  default(v) {\n    EventBetCard = v;\n  }\n\n}, 3);\nlet Events;\nmodule.watch(require(\"../../api/Events\"), {\n  Events(v) {\n    Events = v;\n  }\n\n}, 4);\nmodule.watch(require(\"../css/MyBets.css\"));\n\nclass MyBets extends Component {\n  componentDidMount() {//console.log(this.props.myBets);\n  }\n\n  AddBet(eventId, prob1, prob2, probT, bet1, bet2, betT, earnings) {\n    alert(\"MyBets | Adding bet : \" + bet1 + \"|\" + betT + \"|\" + bet2 + \" | Earnings: \" + earnings);\n    Meteor.call(\"UserData.addBet\", eventId, prob1, prob2, probT, bet1, bet2, betT, earnings, (err, res) => {\n      if (err) {\n        alert(err);\n      } else {\n        alert(\"Bet created!\");\n      }\n    });\n  }\n\n  loadBetsList() {\n    let actBets = this.props.myBets;\n\n    if (actBets && actBets.length > 0) {\n      let res = []; //console.log(this.props.categoryInfo);\n\n      /*res = actBets.map(e => (\r\n          //console.log(\"MyBets | loadBetsList | Bet: \" + e),\r\n          //console.log(e),\r\n          <EventBetCard key={e.Name + \"BetCard\"} eventBetsInfo={e} eventInfo={Events.find({ _id: e.EventId }, { limit: 1 }).fetch()} AddBet={(b1, b2, bT, eR) => this.AddBet(b1, b2, bT, eR)} />\r\n      ));*/\n\n      res = [];\n      console.log(actBets);\n      let sup = [];\n      let lastEventId = actBets[0].eventId;\n      sup.push(actBets[0]);\n      let numEvents = 1;\n\n      for (let i = 1; i < actBets.length; i++) {\n        let e = actBets[i];\n\n        if (e.eventId == lastEventId) {\n          sup.push(e);\n        } else {\n          res.push(React.createElement(EventBetCard, {\n            key: \"BetCard#\" + numEvents,\n            eventBetsInfo: sup,\n            eventInfo: Events.find({\n              _id: lastEventId\n            }, {\n              limit: 1\n            }).fetch(),\n            AddBet: (p1, p2, pT, b1, b2, bT, eR) => this.AddBet(p1, p2, pT, b1, b2, bT, eR)\n          }));\n          numEvents++;\n          lastEventId = e.eventId;\n        }\n      }\n\n      return res;\n    } else {\n      return \"Loading bets..\";\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"MyBets\",\n      className: \"container myEvents\"\n    }, React.createElement(\"h1\", null, \"My Bets\"), React.createElement(\"hr\", {\n      className: \"my-4\"\n    }), React.createElement(\"div\", {\n      className: \"row\"\n    }, this.loadBetsList()));\n  }\n\n}\n\nMyBets.propTypes = {\n  myBets: PropTypes.array.isRequired\n};\nmodule.exportDefault(withTracker(() => {\n  Meteor.subscribe(\"Events\");\n  return {\n    events: Events.find({}).fetch()\n  };\n})(MyBets));","map":{"version":3,"sources":["imports/ui/MainManage/MyBets.jsx"],"names":["React","Component","module","watch","require","default","v","PropTypes","withTracker","EventBetCard","Events","MyBets","componentDidMount","AddBet","eventId","prob1","prob2","probT","bet1","bet2","betT","earnings","alert","Meteor","call","err","res","loadBetsList","actBets","props","myBets","length","console","log","sup","lastEventId","push","numEvents","i","e","find","_id","limit","fetch","p1","p2","pT","b1","b2","bT","eR","render","propTypes","array","isRequired","exportDefault","subscribe","events"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTracker } from \"meteor/react-meteor-data\";\r\n\r\nimport EventBetCard from \"./EventBetCard.jsx\";\r\nimport { Events } from \"../../api/Events\";\r\nimport \"../css/MyBets.css\";\r\n\r\nclass MyBets extends Component {\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props.myBets);\r\n    }\r\n\r\n    AddBet(eventId, prob1, prob2, probT, bet1, bet2, betT, earnings) {\r\n        alert(\"MyBets | Adding bet : \" + bet1 + \"|\" + betT + \"|\" + bet2 + \" | Earnings: \" + earnings);\r\n\r\n        Meteor.call(\"UserData.addBet\", eventId, prob1, prob2, probT, bet1, bet2, betT, earnings, (err, res) => {\r\n            if (err) {\r\n                alert(err);\r\n            } else {\r\n                alert(\"Bet created!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    loadBetsList() {\r\n        let actBets = this.props.myBets;\r\n\r\n        if (actBets && actBets.length > 0) {\r\n            let res = []\r\n\r\n            //console.log(this.props.categoryInfo);\r\n\r\n            /*res = actBets.map(e => (\r\n                //console.log(\"MyBets | loadBetsList | Bet: \" + e),\r\n                //console.log(e),\r\n                <EventBetCard key={e.Name + \"BetCard\"} eventBetsInfo={e} eventInfo={Events.find({ _id: e.EventId }, { limit: 1 }).fetch()} AddBet={(b1, b2, bT, eR) => this.AddBet(b1, b2, bT, eR)} />\r\n            ));*/\r\n\r\n            res = []\r\n\r\n            console.log(actBets);\r\n\r\n            let sup = [];\r\n            let lastEventId = actBets[0].eventId;            \r\n            sup.push(actBets[0]);            \r\n\r\n            let numEvents = 1;\r\n\r\n            for (let i = 1; i < actBets.length; i++) {\r\n                let e = actBets[i];\r\n\r\n                if(e.eventId == lastEventId){\r\n                    sup.push(e);\r\n                }else{\r\n                    res.push(\r\n                        <EventBetCard key={\"BetCard#\" + (numEvents)} eventBetsInfo={sup} eventInfo={Events.find({ _id: lastEventId }, { limit: 1 }).fetch()} AddBet={(p1, p2, pT, b1, b2, bT, eR) => this.AddBet(p1, p2, pT, b1, b2, bT, eR)} />\r\n                    );\r\n\r\n                    numEvents++;\r\n                    lastEventId = e.eventId;\r\n                }\r\n            }\r\n\r\n            return res;\r\n        }else{\r\n            return \"Loading bets..\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"MyBets\" className=\"container myEvents\">\r\n                <h1>My Bets</h1>\r\n\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"row\">\r\n                    {this.loadBetsList()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMyBets.propTypes = {\r\n    myBets: PropTypes.array.isRequired\r\n}\r\n\r\n\r\nexport default withTracker(\r\n    () => {\r\n        Meteor.subscribe(\"Events\");\r\n\r\n        return {\r\n            events: Events.find({}).fetch()\r\n        }\r\n    }\r\n)(MyBets);"]},"sourceType":"script","hash":"46911c2d50d52ea8b0ba34c6324a8cdb0933fa33"}
