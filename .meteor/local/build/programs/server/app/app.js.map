{"version":3,"sources":["meteor://ðŸ’»app/imports/api/Bets.js","meteor://ðŸ’»app/imports/api/Categories.js","meteor://ðŸ’»app/imports/api/Events.js","meteor://ðŸ’»app/imports/api/UserData.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Bets","Meteor","watch","require","v","Mongo","check","Collection","isServer","publish","userDataPublication","find","userId","ready","fields","publicFields","sort","eventId","methods","eI","p1","p2","pT","b1","b2","bT","e1","e2","eT","insert","Prob1","Prob2","ProbT","Team1","Team2","Tie","E1","E2","ET","State","betId","update","_id","$set","Categories","CategoriesPublication","res","fetch","console","log","Events","EventsPublication","category","name","place","date","image","team1","team2","prob1","prob2","tie","txtTest","nEvent","Category","Name","Place","Image","Date","Team1R","Team2R","eId","UserData","type","coins","InBet","all","String","aUserId","$inc","numCoins","startup"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from \"meteor/meteor\";\r\nimport { Mongo } from \"meteor/mongo\";\r\nimport { check } from \"meteor/check\";\r\n\r\nexport const Bets = new Mongo.Collection(\"Bets\");\r\n\r\nif (Meteor.isServer) {\r\n    // This code only runs on the server\r\n    Meteor.publish('Bets', function userDataPublication() {\r\n        return Bets.find();\r\n\r\n        if (!this.userId) {\r\n            return this.ready();\r\n          }\r\n        \r\n          return Bets.find({\r\n            userId: this.userId\r\n          }, {\r\n            fields: Bets.publicFields,\r\n            sort: {eventId: 1}\r\n          });\r\n    });\r\n}\r\n\r\nMeteor.methods({\r\n    \"Bets.addBet\"(eI, p1, p2, pT, b1, b2, bT, e1, e2, eT){\r\n\r\n        Bets.insert({\r\n            userId: this.userId,\r\n            eventId: eI,\r\n            Prob1: p1,\r\n            Prob2: p2,\r\n            ProbT: pT,\r\n            Team1: b1,\r\n            Team2: b2,\r\n            Tie: bT,\r\n            E1: e1,\r\n            E2: e2,\r\n            ET: eT,\r\n            State: \"OPEN\"\r\n        });    \r\n    },\r\n    \"Bets.closeBet\"(betId){\r\n        Bets.update(\r\n            { _id: betId },\r\n            {\r\n                $set: { State: \"CLOSED\" }\r\n            }\r\n        );\r\n    }\r\n});\r\n","import { Meteor } from \"meteor/meteor\";\r\nimport { Mongo } from \"meteor/mongo\";\r\nimport { check } from \"meteor/check\";\r\n\r\nexport const Categories = new Mongo.Collection(\"Categories\");\r\n\r\nif (Meteor.isServer) {\r\n    // This code only runs on the server\r\n    Meteor.publish('Categories', function CategoriesPublication() {\r\n        return Categories.find();\r\n/*\r\n        if (!this.userId) {\r\n            return this.ready();\r\n          }\r\n        \r\n          return UserData.find({\r\n            userId: this.userId\r\n          }, {\r\n            fields: UserData.publicFields\r\n          });*/\r\n    });\r\n}\r\n\r\nMeteor.methods({\r\n  \"Categories.getAll\"(){\r\n    let res = Categories.find({}).fetch();\r\n    console.log(res);\r\n  }\r\n\r\n});","import { Meteor } from \"meteor/meteor\";\r\nimport { Mongo } from \"meteor/mongo\";\r\nimport { check } from \"meteor/check\";\r\n\r\nexport const Events = new Mongo.Collection(\"Events\");\r\n\r\nif (Meteor.isServer) {\r\n    // This code only runs on the server\r\n    Meteor.publish('Events', function EventsPublication() {\r\n        return Events.find();\r\n        /*\r\n                if (!this.userId) {\r\n                    return this.ready();\r\n                  }\r\n                \r\n                  return UserData.find({\r\n                    userId: this.userId\r\n                  }, {\r\n                    fields: UserData.publicFields\r\n                  });*/\r\n    });\r\n}\r\n\r\nMeteor.methods({\r\n    \"Events.getAll\"() {\r\n        let res = Events.find({}).fetch();\r\n        console.log(res);\r\n    },\r\n    \"Events.addEvent\"(category, name, place, date, image, team1, team2, prob1, prob2, tie) {\r\n        let txtTest = \"\";\r\n\r\n        txtTest += (category + \"\\n\");\r\n        txtTest += (name + \"\\n\");\r\n        txtTest += (place + \"\\n\");\r\n        txtTest += (date + \"\\n\");\r\n        txtTest += (image + \"\\n\");\r\n        txtTest += (team1 + \"\\n\");\r\n        txtTest += (team2 + \"\\n\");\r\n        txtTest += (prob1 + \"\\n\");\r\n        txtTest += (prob2 + \"\\n\");\r\n        txtTest += (tie + \"\\n\");\r\n\r\n        console.log(txtTest);\r\n\r\n        let nEvent = {\r\n            Category: category,\r\n            Name: name,\r\n            Place: place,\r\n            Image: image,\r\n            Team1: team1,\r\n            Team2: team2,\r\n            Date: date,\r\n            Prob1: prob1,\r\n            Prob2: prob2,\r\n            Tie: tie,\r\n            State: \"NOT_STARTED\",\r\n            Team1R: 0,\r\n            Team2R: 0\r\n        };\r\n\r\n        Events.insert(nEvent);\r\n    },\r\n    \"Events.startEvent\"(eId) {\r\n        console.log(\"Starting event\");\r\n\r\n        Events.update(\r\n            { _id: eId },\r\n            {\r\n                $set: { State: \"STARTED\" }\r\n            }\r\n        );\r\n    },\r\n    \"Events.endEvent\"(eId) {\r\n        console.log(\"Ending event\");\r\n\r\n        Events.update(\r\n            { _id: eId },\r\n            {\r\n                $set: { State: \"FINISHED\" }\r\n            }\r\n        );\r\n    }\r\n});","import { Meteor } from \"meteor/meteor\";\r\nimport { Mongo } from \"meteor/mongo\";\r\nimport { check } from \"meteor/check\";\r\n\r\nexport const UserData = new Mongo.Collection(\"UserData\");\r\n\r\nif (Meteor.isServer) {\r\n    // This code only runs on the server\r\n    Meteor.publish('UserData', function userDataPublication() {\r\n        //return UserData.find();\r\n\r\n        if (!this.userId) {\r\n            return this.ready();\r\n        }\r\n\r\n        return UserData.find({\r\n            userId: this.userId\r\n        }, {\r\n                fields: UserData.publicFields\r\n            });\r\n    });\r\n}\r\n\r\nMeteor.methods({\r\n    \"UserData.createUserData\"() {\r\n        UserData.insert({\r\n            type: \"USER\",\r\n            userId: this.userId,\r\n            coins: 1000,\r\n            InBet: 0\r\n        });\r\n    },\r\n    \"UserData.getAll\"() {\r\n        let all = UserData.find({}).fetch();\r\n        console.log(\"All user data: \");\r\n        console.log(all);\r\n        //Lo Anterior funciona\r\n        return all;\r\n    },\r\n    \"UserData.getData\"(userId) {\r\n        check(userId, String);\r\n\r\n        let res = UserData.find(\r\n            { userId: userId }\r\n        ).fetch();\r\n        return res;\r\n    },\r\n    \"UserData.updateCoins\"(aUserId, e1) {\r\n        UserData.update(\r\n            { userId: aUserId },\r\n            {\r\n                $inc: {\r\n                    coins: e1\r\n                }\r\n            }\r\n        );\r\n    },\r\n    \"UserData.removeBetCoins\"(aUserId) {\r\n        UserData.update(\r\n            { userId: aUserId },\r\n            {\r\n                $set: { InBet: 0 }\r\n            }\r\n        );\r\n    },\r\n    \"UserData.addCoins\"(aUserId, numCoins) {        \r\n        UserData.update(\r\n            { userId: aUserId },\r\n            {\r\n                $inc: {\r\n                    coins: numCoins\r\n                }\r\n            }\r\n        );\r\n    },\r\n    \"UserData.removeNewBetCoins\"(numCoins) {        \r\n        UserData.update(\r\n            { userId: this.userId },\r\n            {\r\n                $inc: {\r\n                    coins: -numCoins,\r\n                    InBet: numCoins\r\n                }\r\n            }\r\n        );\r\n    }\r\n    \r\n});\r\n","import { Meteor } from 'meteor/meteor';\n\nimport \"../imports/api/Bets\";\nimport \"../imports/api/Categories\";\nimport \"../imports/api/Events\";\nimport \"../imports/api/UserData\";\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}